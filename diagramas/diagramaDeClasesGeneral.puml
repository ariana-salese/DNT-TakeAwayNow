@startuml
class Cliente {
    - saldo: Dinero
    - pedido: Pedido 
    - comprasHechas: List<Compra>
    - buffet: Buffet
    + cargarSaldo(monto: Dinero): void
    + agregarProductoAlPedido(producto: Producto, cantidad: int): void
    + comprar(): void
}

Struct Producto {
    - precio: Dinero 
    - nombre: String
    - stock: int
}

Struct Compra {
    - pedido: Pedido
    - codigo: int
}

class Dinero {
    - monto: BigDecimal
    + plus(otro: Dinero): Dinero
    + minus(otro: Dinero): Dinero
    + compareTo(otro: Dinero): int
}

class Almacen{
    -productos: Map<nombre: String, Producto>
    +retirarProducto(producto:Producto, cantidad:int): Boolean
}

Struct Pedido {
    - precioTotal: Dinero
    - productos: Map<Producto, cantidad>
}

class GeneradorDeCodigo {
    +generarCodigo()
}

class Buffet {
    -clientes: Set<Cliente>
    -almacen: Almacen
    -historialDeCompras: List<Compra>
    +agregarProductoAlPedido(pedido:Pedido, producto: Producto, cantidad: int)
    +comprar(pedido:Pedido): Compra
}

Cliente -> Buffet
Cliente -down->Pedido
Buffet -> Almacen
Buffet -down-> Compra
Buffet -down-> GeneradorDeCodigo
Almacen -> Producto
@enduml